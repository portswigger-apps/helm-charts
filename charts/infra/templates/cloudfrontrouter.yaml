{{- if .Values.cloudfrontrouter.enabled }}
apiVersion: platform.portswigger.io/v1alpha1
kind: CloudFrontRouter
metadata:
  name: {{ include "infra.aws.name" . }}
  labels:
    {{- include "infra.labels" . | nindent 8 }}
spec:
  domainName: {{ .Values.cloudfrontrouter.domainName | quote }}
  restrictToOffice: {{ .Values.cloudfrontrouter.restrictToOffice | quote}}
  defaultCacheBehavior:
    allowedMethods:
      - DELETE
      - GET
      - HEAD
      - OPTIONS
      - PATCH
      - POST
      - PUT
    cachedMethods:
      - GET
      - HEAD
      - OPTIONS
    cachePolicyId: {{ default (printf "%s # Managed-%s" (include "infra.cloudfrontRouter.cachePolicyId" .Values.cloudfrontrouter.default.cachePolicyName) .Values.cloudfrontrouter.default.cachePolicyName) .Values.cloudfrontrouter.default.cachePolicyId }}
    targetOriginId: defaultOrigin
    originRequestPolicyId: {{ default (printf "%s # Managed-%s" (include "infra.cloudfrontRouter.originRequestPolicyId" .Values.cloudfrontrouter.default.originRequestPolicyName) .Values.cloudfrontrouter.default.originRequestPolicyName) .Values.cloudfrontrouter.default.originRequestPolicyId }}
    viewerProtocolPolicy: redirect-to-https
  origins:
  - customOriginConfig:
      httpPort: 80
      httpsPort: 443
      originKeepaliveTimeout: {{ default 5 .Values.cloudfrontrouter.default.originKeepaliveTimeout }}
      originProtocolPolicy: https-only
      originReadTimeout: {{ default 10 .Values.cloudfrontrouter.default.originReadTimeout }}
      originSslProtocols:
        - TLSv1.2
    {{- $defaultDomainName := .Values.cloudfrontrouter.default.domainName }}
    {{- if $defaultDomainName }}
    domainName: {{ $defaultDomainName }}
    {{- else }}
    {{ fail "cloudfrontrouter.default.domainName can not be empty"}}
    {{- end }}
    originId: defaultOrigin
  {{- range $origin := .Values.cloudfrontrouter.origins }}
  - customOriginConfig:
      httpPort: 80
      httpsPort: 443
      originKeepaliveTimeout: {{ default 5 $origin.originKeepaliveTimeout }}
      originProtocolPolicy: https-only
      originReadTimeout: {{ default 10 $origin.originReadTimeout }}
      originSslProtocols:
        - TLSv1.2
    domainName: {{ $origin.domainName }}
    originId: {{ $origin.originId }}
  {{- end }}
  {{- with .Values.cloudfrontrouter.orderedCacheBehavior }}
  orderedCacheBehavior:
  {{- range $it := . }}
  {{- $pathPattern := $it.pathPattern }}
  {{- $cachePolicyName :=  (default "CachingDisabled" $it.cachePolicyName) }}
  {{- $cachePolicyId :=  (default (printf "%s # Managed-%s"  (include "infra.cloudfrontRouter.cachePolicyId" $cachePolicyName) $cachePolicyName) $it.cachePolicyId) }}
  {{- $originRequestPolicyName :=  (default "AllViewerExceptHostHeader" $it.originRequestPolicyName) }}
  {{- $originRequestPolicyId :=  (default (printf "%s # Managed-%s"  (include "infra.cloudfrontRouter.originRequestPolicyId" $originRequestPolicyName) $originRequestPolicyName) $it.originRequestPolicyId) }}
  {{- $targetOriginId := $it.targetOriginId }}
  - allowedMethods:
      - GET
      - HEAD
      - OPTIONS
      - PUT
      - PATCH
      - POST
      - DELETE
    cachedMethods:
      - GET
      - HEAD
      - OPTIONS
    compress: true
    pathPattern: {{ $pathPattern }}
    targetOriginId: {{ $targetOriginId }}
    cachePolicyId: {{ $cachePolicyId }}
    originRequestPolicyId: {{ $originRequestPolicyId }}
    viewerProtocolPolicy: redirect-to-https
  {{- end }}
  {{- end }}
{{- end -}}
