global:
  ingress:
    # global.ingress.host -- Ingress host used to configure cloudfront target
    # @section -- global
    host: ""

  serviceAccount:
    # global.serviceAccount.name -- ServiceAccount name to configure IRSA role and IAM Policies for: s3Bucket
    # @section -- global
    name: ""

postgres:
  # postgres.enabled -- Set to `true` to deploy a `PostgresInstance` resource
  # @section -- postgres
  enabled: false

  # postgres.create -- Set to `false` to skip creation of the `PostgresInstance` if it has been created elsewhere
  # @section -- postgres
  create: true

  # postgres.nameOverride -- Override the `PostgresInstance` name or use with `create: false` to map the secrets of an instance created elsewhere
  # @section -- postgres
  nameOverride: ""

  # postgres.size -- Options: micro, small, medium, large or xlarge
  # @default -- `micro`
  # @section -- postgres
  size: null

  # postgres.version -- Options: 16.2, 15.6 or 14.11
  # @default -- `"16.2"`
  # @section -- postgres
  version: null

  # postgres.multiAz -- (bool) Set to `true` to deploy the `PostgresInstance` across multiple availability zones
  # @default -- `false`
  # @section -- postgres
  multiAz: null

s3Bucket:
  # s3Bucket.enabled -- Set to `true` to deploy an `s3Bucket` resource
  # @section -- s3Bucket
  enabled: false

  # s3Bucket.create -- Set to `false` to skip creation of the `s3Bucket` if it has been created elsewhere
  # @section -- s3Bucket
  create: true

  # s3Bucket.nameOverride -- Override the `s3Bucket` name or use with `create: false` to map the secrets of an instance created elsewhere
  # @section -- s3Bucket
  nameOverride: ""

  # s3Bucket.lifecycleRules -- (list) Configure the `s3Bucket` storage [lifecycle rules](https://marketplace.upbound.io/providers/upbound/provider-aws-s3/v1.2.1/resources/s3.aws.upbound.io/BucketLifecycleConfiguration/v1beta1#doc:spec-forProvider-rule)
  # @default -- `[]`
  # @section -- s3Bucket
  lifecycleRules:
    - expiration:
        - days: 0
      status: Disabled

cloudfront:
  # cloudfront.enabled -- Set to `true` to deploy an `CloudFrontSite` resource
  # @section -- cloudfront
  enabled: false

  # cloudfront.hostedZoneId -- The Route53 hosted zone ID to create the certificates and domain names for the `CloudFrontSite` resource
  # @section -- cloudfront
  hostedZoneId: ""

  # cloudfront.domainName -- The presentation domain name for the `CloudFrontSite` resource
  # @section -- cloudfront
  domainName: ""

  # cloudfront.targetOriginDomainName -- The target origin domain name that the `CloudFrontSite` resource fronts
  # @default -- `.Values.global.ingress.host`
  # @section -- cloudfront
  targetOriginDomainName: ""

  geoRestriction:
    # cloudfront.geoRestriction.restrictionType -- Whether to `allow` or `deny` the configured locations access to the `CloudFrontSite`. Set to `none` to remove all restrictions
    # @section -- cloudfront
    restrictionType: allow

    # cloudfront.geoRestriction.locations -- A list of ISO ALPHA-2 country codes to apply restrictions to
    # @section -- cloudfront
    locations:
      - GB

  defaultCacheBehavior:
    # cloudfront.defaultCacheBehavior.allowedMethods -- The HTTP methods that the `CloudFrontSite` allows
    # @section -- cloudfront
    allowedMethods:
      - GET
      - HEAD
      - OPTIONS

    # cloudfront.defaultCacheBehavior.cachedMethods -- The HTTP methods that the `CloudFrontSite` caches
    # @section -- cloudfront
    cachedMethods:
      - GET
      - HEAD

    # cloudfront.defaultCacheBehavior.ttl -- The time-to-live for the `CloudFrontSite` cache
    # @section -- cloudfront
    ttl: 3600

    cookies:
      # cloudfront.defaultCacheBehavior.cookies.behavior -- Whether 'All', 'AllExcept', 'None' or 'Whitelist'ed cookies are included in the cache key.
      # @section -- cloudfront
      behavior: all

      # cloudfront.defaultCacheBehavior.cookies.allowlistedNames -- A list of cookie names to include in the cache key.
      # @section -- cloudfront
      allowlistedNames: []

    headers:
      # cloudfront.defaultCacheBehavior.headers.behavior -- Whether 'None' or 'Whitelist'ed headers are included in the cache key.
      # @section -- cloudfront
      behavior: none

      # cloudfront.defaultCacheBehavior.headers.allowlistedNames -- A list of header names to include in the cache key.
      # @section -- cloudfront
      allowlistedNames: []

    queryStrings:
      # cloudfront.defaultCacheBehavior.queryStrings.behavior -- Whether 'All', 'AllExcept', 'None' or 'Whitelist'ed  query parameters are included in the cache key.
      # @section -- cloudfront
      behavior: none

      # cloudfront.defaultCacheBehavior.queryStrings.allowlistedNames -- A list of query parameter names to include in the cache key.
      # @section -- cloudfront
      allowlistedNames: []
