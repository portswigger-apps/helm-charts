suite: CloudFrontRouter

templates:
  - cloudfrontrouter.yaml

tests:
  - it: should not create a CloudFrontRouter by default
    asserts:
      - hasDocuments:
          count: 0

  - it: should fail create a CloudFrontRouter when default domain is not set
    set:
      global:
      cloudfrontrouter:
        enabled: true
    asserts:
      - failedTemplate:
          errorMessage: cloudfrontrouter.default.domainName can not be empty

  - it: should create a CloudFrontRouter with configured fields
    set:
      global:
      cloudfrontrouter:
        enabled: true
        domainName: cloudfront.example.com
        origins:
          - originId: website
            domainName: www.example.com
        orderedCacheBehavior:
          - pathPattern: /marketing/*
            cachePolicy: CachingOptimized
            targetOrigin: website
          - pathPattern: /users/invoices
            cachePolicy: UseOriginCacheControlHeaders
            targetOrigin: website
        default:
          domainName: default.example.com
    asserts:
      - isKind:
          of: CloudFrontRouter
      - equal:
          path: metadata.name
          value: NAMESPACE-RELEASE-NAME
      - equal:
          path: spec.domainName
          value: cloudfront.example.com
      - equal:
          path: spec.origins
          value:
            - customOriginConfig:
                httpPort: 80
                httpsPort: 443
                originKeepaliveTimeout: 5
                originProtocolPolicy: https-only
                originReadTimeout: 10
                originSslProtocols:
                  - TLSv1.2
              domainName: default.example.com
              originId: defaultOrigin
            - customOriginConfig:
                httpPort: 80
                httpsPort: 443
                originKeepaliveTimeout: 5
                originProtocolPolicy: https-only
                originReadTimeout: 10
                originSslProtocols:
                  - TLSv1.2
              domainName: www.example.com
              originId: website
      - equal:
          path: spec.orderedCacheBehavior
          value:
            - allowedMethods:
                - GET
                - HEAD
                - OPTIONS
                - PUT
                - PATCH
                - POST
                - DELETE
              cachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad
              cachedMethods:
                - GET
                - HEAD
                - OPTIONS
              compress: true
              originRequestPolicyId: b689b0a8-53d0-40ab-baf2-68738e2966ac
              pathPattern: /marketing/*
              targetOriginId: null
              viewerProtocolPolicy: redirect-to-https
            - allowedMethods:
                - GET
                - HEAD
                - OPTIONS
                - PUT
                - PATCH
                - POST
                - DELETE
              cachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad
              cachedMethods:
                - GET
                - HEAD
                - OPTIONS
              compress: true
              originRequestPolicyId: b689b0a8-53d0-40ab-baf2-68738e2966ac
              pathPattern: /users/invoices
              targetOriginId: null
              viewerProtocolPolicy: redirect-to-https
      - equal:
          path: spec.defaultCacheBehavior
          value:
            allowedMethods:
              - DELETE
              - GET
              - HEAD
              - OPTIONS
              - PATCH
              - POST
              - PUT
            cachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad
            cachedMethods:
              - GET
              - HEAD
              - OPTIONS
            originRequestPolicyId: b689b0a8-53d0-40ab-baf2-68738e2966ac
            targetOriginId: defaultOrigin
            viewerProtocolPolicy: redirect-to-https
