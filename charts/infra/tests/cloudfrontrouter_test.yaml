suite: CloudFrontRouter

templates:
  - cloudfrontrouter.yaml

tests:
  - it: should not create a CloudFrontRouter by default
    asserts:
      - hasDocuments:
          count: 0

  - it: should create a CloudFrontRouter with configured fields
    set:
      global:
        ingress:
          host: example.com
      cloudfrontrouter:
        enabled: true
        domainName: cloudfront.example.com
        acmCertificateARN: arn:acm:123456789:certificate/something
        origins:
          default:
            targetDomain: default.example.com
          website:
            targetDomain: www.example.com
        paths:
          - pathPattern: /marketing/*
            cachePolicy: CachingOptimized
            targetOrigin: website
          - pathPattern: /users/invoices
            cachePolicy: UseOriginCacheControlHeaders
            targetOrigin: website
    asserts:
      - isKind:
          of: CloudFrontRouter
      - equal:
          path: metadata.name
          value: NAMESPACE-RELEASE-NAME
      - equal:
          path: spec.domainName
          value: cloudfront.example.com
      - equal:
          path: spec.acmCertificateARN
          value: arn:acm:123456789:certificate/something
      - equal:
          path: spec.origins
          value:
            default:
              targetDomain: default.example.com
            website:
              targetDomain: www.example.com
      - equal:
          path: spec.paths
          value:
          - pathPattern: /marketing/*
            cachePolicy: CachingOptimized
            cachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
            targetOrigin: website
          - pathPattern: /users/invoices
            cachePolicy: UseOriginCacheControlHeaders
            cachePolicyId: 83da9c7e-98b4-4e11-a168-04f0df8e2c65
            targetOrigin: website
      - equal:
          path: spec.default
          value:
            cachePolicy: CachingDisabled
            cachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad
            targetOrigin: default
