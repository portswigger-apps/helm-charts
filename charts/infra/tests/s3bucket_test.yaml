suite: S3Bucket

templates:
  - s3bucket.yaml

tests:
  - it: should not create an S3Bucket by default
    asserts:
      - hasDocuments:
          count: 0

  - it: should not create an S3Bucket if create is false
    set:
      s3Bucket:
        enabled: true
        create: false
    asserts:
      - hasDocuments:
          count: 0

  - it: should create an S3Bucket if enabled
    set:
      s3Bucket:
        enabled: true
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: metadata.name
          value: NAMESPACE-RELEASE-NAME
      - equal:
          path: spec.irsaRoleName
          value: NAMESPACE-RELEASE-NAME-irsarole
      - equal:
          path: spec.lifecycleRules
          value:
            - expiration:
                - days: 0
              status: Disabled

  - it: should create an s3Bucket with configured values
    set:
      global:
        serviceAccount:
          name: my-cool-service-account
      s3Bucket:
        enabled: true
        lifecycleRules:
          - expiration:
              - days: 50
            filter:
              prefix: prefix-
            status: Enabled
    asserts:
      - equal:
          path: spec.irsaRoleName
          value: my-cool-service-account-irsarole
      - equal:
          path: spec.lifecycleRules
          value:
            - expiration:
                - days: 50
              filter:
                prefix: prefix-
              status: Enabled
