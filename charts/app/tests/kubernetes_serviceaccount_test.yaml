suite: ServiceAccount

templates:
  - kubernetes/serviceaccount.yaml

tests:
  - it: should create a ServiceAccount by default
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: ServiceAccount
      - equal:
          path: metadata.name
          value: RELEASE-NAME
      - equal:
          path: automountServiceAccountToken
          value: false

  - it: should create a ServiceAccount if enabled is false
    set:
      global:
        serviceAccount:
          enabled: false
    asserts:
      - hasDocuments:
          count: 0

  - it: should create a ServiceAccount with IRSA annotation if s3Bucket is deployed
    set:
      global:
        aws:
          accountId: "account-id"
      infra:
        s3Bucket:
          enabled: true
    asserts:
      - equal:
          path: metadata.annotations
          value:
            eks.amazonaws.com/role-arn: arn:aws:iam::account-id:role/product-roles/NAMESPACE-RELEASE-NAME-irsarole

  - it: should create a ServiceAccount with IRSA annotation if dynamodb table is defined
    set:
      global:
        aws:
          accountId: "account-id"
      infra:
        dynamodb:
          tables:
            - name: test
    asserts:
      - equal:
          path: metadata.annotations
          value:
            eks.amazonaws.com/role-arn: arn:aws:iam::account-id:role/product-roles/NAMESPACE-RELEASE-NAME-irsarole

  - it: should create a ServiceAccount with IRSA annotation if bedrock is enabled
    set:
      global:
        aws:
          accountId: "account-id"
      infra:
        bedrock:
          enabled: true
    asserts:
      - equal:
          path: metadata.annotations
          value:
            eks.amazonaws.com/role-arn: arn:aws:iam::account-id:role/product-roles/NAMESPACE-RELEASE-NAME-irsarole
