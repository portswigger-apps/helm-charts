suite: Pre Deploy Hook configuration
templates:
  - helm/pre-rollback-hook.yaml
    # secret templates for checksums
  - kubernetes/secret-env.yaml
  - kubernetes/secret-volume.yaml
    # included for shared templating
  - kubernetes/deployment.yaml
tests:
  - it: should not create job without command set
    template: helm/pre-rollback-hook.yaml
    set:
      preRollbackCommand: null
    asserts:
      - hasDocuments:
          count: 0

  - it: should add secrets
    template: helm/pre-rollback-hook.yaml
    set:
      preRollbackCommand:
      - python3
      - manage.py
      - migrate
      secretEnv:
        KEY: value
      secretVolume:
        file: aGVsbG8K
    asserts:
      - equal:
          path: spec.template.spec.containers[0].envFrom[0]
          value:
            secretRef:
              name: RELEASE-NAME-env
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[1]
          value:
            mountPath: /secrets
            name: RELEASE-NAME-volume
            readOnly: true
      - equal:
          path: spec.template.spec.volumes[1]
          value:
            name: RELEASE-NAME-volume
            secret:
              secretName: RELEASE-NAME-volume

  - it: should not have health check and ports
    template: helm/pre-rollback-hook.yaml
    set:
      preRollbackCommand:
      - python3
      - manage.py
      - migrate
      healthcheckEndpoint:
        path: /health
        port: app-port
      ports:
        app-port:
          port: 8080
          protocol: TCP
          expose: true
    asserts:
      - notExists:
          path: spec.template.spec.containers[0].ports
      - notExists:
          path: spec.template.spec.containers[0].livenessProbe

  - it: should add command to pod
    template: helm/pre-rollback-hook.yaml
    set:
      preRollbackCommand:
        - python3
        - manage.py
        - migrate
    asserts:
      - equal:
          path: spec.template.spec.containers[0].command
          value:
          - "python3"
          - "manage.py"
          - "migrate"

  - it: should not add args to pod
    template: helm/pre-rollback-hook.yaml
    set:
      preRollbackCommand:
        - python3
        - manage.py
        - migrate
      args:
        - my-arg
    asserts:
      - notExists:
          path: spec.template.spec.containers[0].args

  - it: should add database environment variables
    template: helm/pre-rollback-hook.yaml
    set:
      image:
        name: image-name
        tag: tag
      infra:
        postgres:
          name: database-name
      preRollbackCommand:
      - python3
      - manage.py
      - migrate
    asserts:
      - isKind:
          of: Job
      - equal:
          path: spec.template.spec.containers[0].image
          value: "image-name:tag"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
              name: "DATABASE_NAME"
              value: app
      - contains:
          path: spec.template.spec.containers[0].env
          content:
              name: "DATABASE_HOST"
              valueFrom:
                secretKeyRef:
                  key: host
                  name: database-name-postgres
      - contains:
          path: spec.template.spec.containers[0].env
          content:
              name: "DATABASE_PORT"
              valueFrom:
                secretKeyRef:
                  key: port
                  name: database-name-postgres
      - contains:
          path: spec.template.spec.containers[0].env
          content:
              name: "DATABASE_USERNAME"
              valueFrom:
                secretKeyRef:
                  key: username
                  name: database-name-postgres
      - contains:
          path: spec.template.spec.containers[0].env
          content:
              name: "DATABASE_PASSWORD"
              valueFrom:
                secretKeyRef:
                  key: password
                  name: database-name-postgres
      - contains:
          path: spec.template.spec.containers[0].env
          content:
              name: DATABASE_URL
              value: postgres://$(DATABASE_USERNAME):$(DATABASE_PASSWORD)@$(DATABASE_HOST):$(DATABASE_PORT)/$(DATABASE_NAME)
      - contains:
          path: spec.template.spec.containers[0].env
          content:
              name: JDBC_DATABASE_URL
              value: jdbc:postgresql://$(DATABASE_HOST):$(DATABASE_PORT)/$(DATABASE_NAME)?user=$(DATABASE_USERNAME)&password=$(DATABASE_PASSWORD)
